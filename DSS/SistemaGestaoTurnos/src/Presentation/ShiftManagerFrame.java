/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Business.BusinessFacade;
import Business.Pair;
import Business.UCInvalida;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;

/**
 *
 * @author rafae
 */
public class ShiftManagerFrame extends javax.swing.JFrame {

    private final String NO_STUDENT = "--";
    
    
    private final BusinessFacade bFacade;
    private final String uc;
    private final String turno;
    private int capacidade;
    private final boolean classesStarted;
    
    
    public ShiftManagerFrame(BusinessFacade bFacade, String uc, String turno,
            boolean classesStarted) {
        this.bFacade = bFacade;
        this.uc = uc;
        this.turno = turno;
        this.classesStarted = classesStarted;
        initComponents();
        this.styleComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        capLabel = new javax.swing.JLabel();
        addLabel = new javax.swing.JLabel();
        removeLabel = new javax.swing.JLabel();
        changeLabel = new javax.swing.JLabel();
        capText = new javax.swing.JTextField();
        addBox = new javax.swing.JComboBox<>();
        removeBox = new javax.swing.JComboBox<>();
        fromBox = new javax.swing.JComboBox<>();
        toBox = new javax.swing.JComboBox<>();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(45, 54, 76));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));

        titleLabel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("title");

        jSeparator1.setBackground(new java.awt.Color(88, 144, 255));
        jSeparator1.setForeground(new java.awt.Color(88, 144, 255));
        jSeparator1.setOpaque(true);

        capLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        capLabel.setForeground(new java.awt.Color(255, 255, 255));
        capLabel.setText("Capacidade");

        addLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        addLabel.setForeground(new java.awt.Color(255, 255, 255));
        addLabel.setText("Adicionar");

        removeLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        removeLabel.setForeground(new java.awt.Color(255, 255, 255));
        removeLabel.setText("Remover");

        changeLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        changeLabel.setForeground(new java.awt.Color(255, 255, 255));
        changeLabel.setText("Trocar");

        capText.setBackground(new java.awt.Color(45, 54, 76));
        capText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        capText.setForeground(new java.awt.Color(255, 255, 255));
        capText.setText("jTextField1");
        capText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        capText.setCaretColor(new java.awt.Color(255, 255, 255));

        addBox.setBackground(new java.awt.Color(45, 54, 76));
        addBox.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        addBox.setForeground(new java.awt.Color(255, 255, 255));
        addBox.setBorder(null);

        removeBox.setBackground(new java.awt.Color(45, 54, 76));
        removeBox.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        removeBox.setForeground(new java.awt.Color(255, 255, 255));
        removeBox.setBorder(null);

        fromBox.setBackground(new java.awt.Color(45, 54, 76));
        fromBox.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fromBox.setForeground(new java.awt.Color(255, 255, 255));
        fromBox.setBorder(null);

        toBox.setBackground(new java.awt.Color(45, 54, 76));
        toBox.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        toBox.setForeground(new java.awt.Color(255, 255, 255));
        toBox.setBorder(null);

        okButton.setBackground(new java.awt.Color(88, 144, 255));
        okButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        okButton.setForeground(new java.awt.Color(255, 255, 255));
        okButton.setText("OK");
        okButton.setContentAreaFilled(false);
        okButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        okButton.setOpaque(true);
        okButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okButtonMouseClicked(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(88, 144, 255));
        cancelButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancelar");
        cancelButton.setContentAreaFilled(false);
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.setOpaque(true);
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addGap(42, 42, 42)
                        .addComponent(cancelButton))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(titleLabel)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(capLabel)
                                .addComponent(addLabel)
                                .addComponent(removeLabel)
                                .addComponent(changeLabel))
                            .addGap(38, 38, 38)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(removeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(capText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(fromBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(toBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(46, 46, 46))))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capLabel)
                    .addComponent(capText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addLabel)
                    .addComponent(addBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeLabel)
                    .addComponent(removeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeLabel)
                    .addComponent(fromBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        this.dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void okButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okButtonMouseClicked
        boolean c = false;
        
        try {
            int cap = Integer.parseInt(capText.getText());
            
            if (cap != capacidade) {
                bFacade.setCapacidade(uc, turno, cap);
                bFacade.writeLog(uc, turno, "Capacidade alterada para " + cap);
            } else {
                c = true;
            }
        } catch (Exception e) {
            ErrorMessage error = new ErrorMessage("Capacidade Inválida!");
            error.setVisible(true);
            return;
        }
        
        String addA = (String)addBox.getSelectedItem();
        String remA = (String)removeBox.getSelectedItem();
        String fromA = (String)fromBox.getSelectedItem();
        String toA = (String)toBox.getSelectedItem();
        
        
        if (!addA.equals(NO_STUDENT)) {
            bFacade.addAlunoTurno(addA, turno, uc);
            bFacade.writeLog(uc, turno, "Adicionado o aluno " + addA);
            c = false;
        }
        
        if (!remA.equals(NO_STUDENT)) {
            bFacade.removeAlunoTurno(uc, turno, remA);
            bFacade.writeLog(uc, turno, "Removido o aluno " + remA);
            c = false;
        }
        
        try {
            if (!fromA.equals(NO_STUDENT) && toA.equals(NO_STUDENT)) {
                ErrorMessage error = new ErrorMessage(
                        "Apenas foi selecionado um aluno para a troca.");
                error.setVisible(true);
                return;
            }
            else if (fromA.equals(NO_STUDENT) && !toA.equals(NO_STUDENT)) {
                ErrorMessage error = new ErrorMessage(
                        "Apenas foi selecionado um aluno para a troca.");
                error.setVisible(true);
                return;
            }
            else if (!fromA.equals(NO_STUDENT) && !toA.equals(NO_STUDENT)) {
                String turnoT;
                
                if (bFacade.isTurnoPratico(uc, turno)) {
                    turnoT = bFacade.getTurnoPraticoAluno(uc, toA);
                }
                else {
                    turnoT = bFacade.getTurnoTeoAluno(uc, toA);
                }
                
                bFacade.TrocarAlunos(fromA, turno, toA, turnoT, uc);
                bFacade.writeLog(uc, turno, "Removido o aluno " + fromA);
                bFacade.writeLog(uc, turno, "Adicionado o aluno " + toA);
                bFacade.writeLog(uc, turnoT, "Adicionado o aluno " + fromA);
                
                c = false;
            }
        } catch (Exception e) {
            return;
        }
        
        if (!c) {
            SuccessFrame s = new SuccessFrame();
            s.setVisible(true);  
        } else {
            ErrorMessage error = 
                    new ErrorMessage(
                            "A capacidade do turno manteve-se inalterada.");
            error.setVisible(true);
        }
        
        this.dispose();
    }//GEN-LAST:event_okButtonMouseClicked

    
    private void styleComponents() {
        capText.setBorder(BorderFactory.createCompoundBorder(
            capText.getBorder(), 
            BorderFactory.createEmptyBorder(5, 5, 5, 5)));
       
        try {
            capacidade = bFacade.getCapacidadeTurno(uc, turno);
            capText.setText(String.valueOf(capacidade));
            
            List<Pair<String, Integer>> aTurno = 
                    bFacade.getAlunosTurno(uc, turno);
            List<String> aux = new ArrayList<>();
            
            aTurno.forEach((p) -> {
                aux.add(p.getLeft());
            });
            
            List<String> aInsc = bFacade.getAlunosInscritos(uc);
            List<String> nTurno = new ArrayList<>();
            
            aInsc.stream()
                    .filter((i) -> (!aux.contains(i))).forEachOrdered((i) -> {
                nTurno.add(i);
            });
            
            addBox.addItem(NO_STUDENT);
            removeBox.addItem(NO_STUDENT);
            fromBox.addItem(NO_STUDENT);
            toBox.addItem(NO_STUDENT);
            
            for (String s : aux) {
                removeBox.addItem(s);
                fromBox.addItem(s);
            }
            
            for (String s : nTurno) {
                toBox.addItem(s);
                addBox.addItem(s);
            }
            
            titleLabel.setText(uc + " - " + turno);
        } catch (UCInvalida e) {
            throw new RuntimeException(e);
        }
        
        if (!classesStarted) {
            addBox.setVisible(false);
            addLabel.setVisible(false);
            fromBox.setVisible(false);
            toBox.setVisible(false);
            removeBox.setVisible(false);
            changeLabel.setVisible(false);
            removeLabel.setVisible(false);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> addBox;
    private javax.swing.JLabel addLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel capLabel;
    private javax.swing.JTextField capText;
    private javax.swing.JLabel changeLabel;
    private javax.swing.JComboBox<String> fromBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> removeBox;
    private javax.swing.JLabel removeLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JComboBox<String> toBox;
    // End of variables declaration//GEN-END:variables
}
