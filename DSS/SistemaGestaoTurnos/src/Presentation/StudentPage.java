/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Business.BusinessFacade;
import Business.IUC;
import Business.Pair;
import Business.UCInvalida;
import Business.UtilizadorInvalido;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author rafae
 */
public class StudentPage extends javax.swing.JFrame implements Observer {

    private static final String ADD_CU_TEXT = "Inscrever";
    
    private final BusinessFacade bFacade;
    private boolean cuPanelSelected;
    private final List<addCUPanel> addedCUs;
    private final boolean classesStarted;
    
    
    
    /**
     * Creates new form Studentpage
     * @param bFacade
     */
    public StudentPage(BusinessFacade bFacade) {
        initComponents();
        classesStarted = ConfigReader.readFile();
        this.bFacade = bFacade;
        cuPanelSelected = true;
        addedCUs = new ArrayList<>();
        this.styleComponents();
    }

    
    @Override
    public void update(Observable observable, Object object) {
        mainPanel.removeAll();
        
        if (cuPanelSelected) {
            this.initCUPanel();
        } else {
            this.initRequestPanel();
        }
        
        mainPanel.repaint();
        mainPanel.revalidate();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cusButton = new javax.swing.JButton();
        requestsMenu = new javax.swing.JButton();
        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(45, 54, 76));

        cusButton.setBackground(new java.awt.Color(88, 144, 255));
        cusButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cusButton.setForeground(new java.awt.Color(255, 255, 255));
        cusButton.setText("UCs");
        cusButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        cusButton.setContentAreaFilled(false);
        cusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cusButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cusButton.setOpaque(true);
        cusButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusButtonMouseClicked(evt);
            }
        });

        requestsMenu.setBackground(new java.awt.Color(45, 54, 76));
        requestsMenu.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        requestsMenu.setForeground(new java.awt.Color(255, 255, 255));
        requestsMenu.setText("Trocas ");
        requestsMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        requestsMenu.setContentAreaFilled(false);
        requestsMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        requestsMenu.setMargin(new java.awt.Insets(0, 0, 0, 0));
        requestsMenu.setOpaque(true);
        requestsMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestsMenuMouseClicked(evt);
            }
        });

        mainScrollPane.setBackground(new java.awt.Color(45, 54, 76));
        mainScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));

        mainPanel.setBackground(new java.awt.Color(45, 54, 76));
        mainPanel.setMinimumSize(new java.awt.Dimension(548, 430));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        mainScrollPane.setViewportView(mainPanel);

        logoutButton.setBackground(new java.awt.Color(45, 54, 76));
        logoutButton.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("Logout");
        logoutButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 43, 62)));
        logoutButton.setContentAreaFilled(false);
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.setOpaque(true);
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(requestsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(mainScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(requestsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(mainScrollPane)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        bFacade.logout();
        bFacade.deleteObserver(this);
        HomeFrame h = new HomeFrame(bFacade);
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void requestsMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestsMenuMouseClicked
        cuPanelSelected = false;
        requestsMenu.setBackground(Color.decode(ThemeColors.BLUE_COLOR));
        cusButton.setBackground(Color.decode(ThemeColors.DARK_COLOR));
        mainPanel.removeAll();
        this.initRequestPanel();
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_requestsMenuMouseClicked

    private void cusButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusButtonMouseClicked
        cuPanelSelected = true;
        requestsMenu.setBackground(Color.decode(ThemeColors.DARK_COLOR));
        cusButton.setBackground(Color.decode(ThemeColors.BLUE_COLOR));
        mainPanel.removeAll();
        this.initCUPanel();
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_cusButtonMouseClicked

    
    private void initRequestPanel() {
        mainPanel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        
        c.anchor = GridBagConstraints.CENTER;
        c.gridx = 0;
        int i;
        
        try {
            List<Pair<String, String>> pedidos = bFacade.getPedidos();
            Map<String, List<String>> ucs = bFacade.getUCsInscritas();
            c.gridy = 0;
            i = 1;
            mainPanel.add(new RequestStateTitle(), c);
            
            for (Pair<String, String> p : pedidos) {
                String u = p.getLeft();
                String t = p.getRight();
                String f = "";

                if (bFacade.isTurnoPratico(u, t)) {
                    for (String s : ucs.get(u)) {
                        if (bFacade.isTurnoPratico(u, s)) {
                            f = s;
                            break;
                        }
                    }
                } else {
                    for (String s : ucs.get(u)) {
                        if (!bFacade.isTurnoPratico(u, s)) {
                            f = s;
                            break;
                        }
                    }
                }

                int index = bFacade.getEstadoPedido(u, t);
                
                if (index >= 0) {
                    c.gridy = i;
                    mainPanel.add(
                            new RequestState(bFacade, u, f, t, ++index), c);
                    i++;
                }
            }
            
            this.fillAvailableSpace(c, i);
        } catch (UCInvalida | UtilizadorInvalido e) {
            throw new RuntimeException(e);
        }
    }


    private void initCUPanel() {
        mainPanel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        
        c.anchor = GridBagConstraints.CENTER;
        c.gridx = 0;
        int i;
        
        try {
            Map<String, List<String>> ucs = bFacade.getUCsInscritas();
            i = 0;

            if (ucs.isEmpty()) {
                Collection<IUC> col = bFacade.getUCs();
                
                for (IUC u : col) {
                    c.gridy = i;
                    addCUPanel a = new addCUPanel(u);
                    addedCUs.add(a);
                    mainPanel.add(a, c);
                    i++;
                }
                
                JButton button = new ThemedButton(ADD_CU_TEXT);
        
                c.ipady = 15;
                c.fill = GridBagConstraints.NONE;
                c.anchor = GridBagConstraints.WEST;
                c.insets = new Insets(20, 20, 20, 0);
                c.gridy = ++i;
        
                mainPanel.add(button, c);
        
                button.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        List<String> ucs = new ArrayList<>();
                        
                        for (addCUPanel a : addedCUs) {
                            if (a.isChecked()) {
                                ucs.add(a.getName());
                            }
                        }
                        
                        bFacade.inscreverUCs(ucs);
                    }
                });
            }
            else {
                for (String u : ucs.keySet()) {
                    c.gridy = i;
                    List<String> list = ucs.get(u);

                    mainPanel.add(new CUPanel(
                            bFacade, u, list, classesStarted), c);

                    i++;
                }
            }
            
            this.fillAvailableSpace(c, i);
        } catch (UtilizadorInvalido e) {
            throw new RuntimeException(e);
        }
    }
    
    
    private void fillAvailableSpace(GridBagConstraints c, int gridy) {
        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        panel.setOpaque(false);
        
        c.gridy = gridy;
        c.weighty = 1.0;
        c.weightx = 1.0;
            
        mainPanel.add(panel, c);
    }
    
    
    private void styleComponents() {
        this.getContentPane()
                .setBackground(Color.decode(ThemeColors.DARK_COLOR));
        
        this.bFacade.addObserver(this);
        
        if (classesStarted) {
            requestsMenu.setVisible(false);
        }
        
        this.initCUPanel();   
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cusButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JButton requestsMenu;
    // End of variables declaration//GEN-END:variables
}
