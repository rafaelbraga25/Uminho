#BlueJ class context
comment0.params=
comment0.target=Imoobiliaria()
comment0.text=\r\n\ Construtor\ vazio.\r\n
comment1.params=utilizadores\ imoveis\ utilizador\ leilao
comment1.target=Imoobiliaria(java.util.Map,\ java.util.List,\ Utilizador,\ Leilao)
comment1.text=\r\n\ Construtor\ por\ partes.\r\n\ \r\n\ @param\ utilizadores\ Mapeamento\ dos\ utilizadores\ e\ emails.\r\n\ @param\ imoveis\ \ \ \ \ \ Lista\ de\ todos\ os\ im\u00F3veis.\r\n\ @param\ utilizador\ \ \ Utilizador\ com\ sess\u00E3o\ iniciada.\r\n\ @param\ leilao\ \ \ \ \ \ \ \u00DAltimo\ leil\u00E3o.\r\n
comment10.params=preco
comment10.target=java.util.List\ getHabitaveis(int)
comment10.text=\r\n\ @brief\ Devolve\ a\ lista\ de\ todos\ os\ im\u00F3veis\ habit\u00E1veis\ (at\u00E9\ um\ certo\ pre\u00E7o)\r\n\ \ \ \ \ \ \ \ \r\n\ Para\ cada\ im\u00F3vel,\ verifica-se\ se\ \u00E9\ do\ tipo\ Habitavel\ e\ se\ o\ seu\ pre\u00E7o\ est\u00E1\ abaixo\r\n\ do\ pre\u00E7o\ m\u00E1ximo\ recebido\ como\ par\u00E2metro.\ Em\ caso\ afirmativo,\ adiciona-se\ uma\ nova\r\n\ consulta\ com\ a\ data\ atual\ e\ o\ email\ do\ utilizador\ com\ sess\u00E3o\ iniciada.\ Por\ fim,\r\n\ retorna-se\ a\ um\ ArrayList\ com\ o\ resultado\ da\ pesquisa.\r\n\ \r\n\ @param\ preco\ Pre\u00E7o\ m\u00E1ximo\ dos\ im\u00F3veis\ a\ pesquisar.\r\n\ @return\ ret\ ArrayList\ com\ o\ resultado\ da\ pesquisa\ dos\ im\u00F3veis.\r\n
comment11.params=idImovel
comment11.target=Imovel\ getImovelById(java.lang.String)
comment11.text=\r\n\ @brief\ Devolve\ um\ im\u00F3vel\ atrav\u00E9s\ do\ seu\ id,\ caso\ este\ exista.\r\n\ \r\n\ Devolve\ uma\ c\u00F3pia\ do\ im\u00F3vel\ correspondente\ ao\ id\ recebido.\ Caso\ o\ im\u00F3vel\ n\u00E3o\ exista\ \u00E9\ lan\u00E7ada\ a\r\n\ excesso\ NullPointerException.\r\n\ \r\n\ @param\ idImovel\ Id\ do\ im\u00F3vel\ pretendido.\r\n\ @return\ C\u00F3pia\ do\ im\u00F3vel\ correspondente\ ao\ id\ recebido.\r\n
comment12.params=
comment12.target=java.util.Map\ getMapeamentoImoveis()
comment12.text=\r\n\ @brief\ Devolve\ um\ mapeamento\ entre\ todos\ os\ im\u00F3veis\ e\ respetivos\ vendedores.\r\n\ \ \ \ \ \ \ \r\n\ Para\ cada\ im\u00F3vel\ e\ para\ cada\ vendedor,\ verifica-se\ se\ este\ cont\u00E9m\ o\ im\u00F3vel\ na\ sua\ lista\ de\r\n\ im\u00F3veis\ em\ venda.\ Em\ caso\ afirmativo,\ adiciona-se\ a\ um\ Map\ uma\ c\u00F3pia\ desse\ mesmo\r\n\ vendedor.\ Por\ fim,\ retorna-se\ o\ Map\ que\ faz\ corresponder\ a\ cada\ im\u00F3vel\ o\ seu\ respetivo\ vendedor.\r\n\ \r\n\ @return\ ret\ Map\ que\ faz\ corresponder\ a\ cada\ im\u00F3vel\ o\ seu\ respetivo\ vendedor.\r\n
comment13.params=
comment13.target=java.util.TreeSet\ getFavoritos()
comment13.text=\r\n\ @brief\ Permite\ a\ um\ comprador\ consultar\ os\ seus\ im\u00F3veis\ favoritos\ ordenados\ por\ pre\u00E7o.\r\n\ \ \ \ \ \ \ \r\n\ Primeiro\ cria-se\ um\ comparador\ para\ ordenar\ os\ im\u00F3veis\ por\ pre\u00E7o.\ Se\ o\ utilizador\ for\r\n\ um\ comprador\ (caso\ n\u00E3o\ o\ seja,\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ SemAutorizacao),\ vai-se\ \u00E0\ sua\ lista\r\n\ de\ favoritos\ e\ adiciona-se\ uma\ c\u00F3pia\ de\ cada\ um\ dos\ im\u00F3veis\ favoritos\ a\ um\ TreeSet\ \r\n\ ordenado\ pelo\ comparador.\ Por\ fim,\ devolve-se\ o\ TreeSet.\r\n\ \r\n\ @return\ set\ TreeSet\ dos\ im\u00F3veis\ favoritos\ do\ comprador.\r\n
comment14.params=email
comment14.target=Utilizador\ getUtilizadorByEmail(java.lang.String)
comment14.text=\r\n\ @param\ email\ Email\ do\ utilizador\ que\ se\ pretende\ obter.\r\n\ @return\ Devolve\ um\ utilizador\ correspondente\ a\ um\ email\ caso\ este\ exista.\r\n
comment15.params=utilizadores
comment15.target=void\ setUtilizadores(java.util.Map)
comment15.text=\r\n\ Altera\ o\ campo\ "utilizadores"\ da\ Imoobiliaria.\r\n
comment16.params=imoveis
comment16.target=void\ setImoveis(java.util.List)
comment16.text=\r\n\ Altera\ o\ campo\ "imoveis"\ da\ Imoobiliaria.\r\n
comment17.params=utilizador
comment17.target=void\ setUtilizador(Utilizador)
comment17.text=\r\n\ Altera\ o\ campo\ "utilizador"\ da\ Imoobiliaria.\r\n
comment18.params=idImovel\ estado
comment18.target=void\ setEstado(java.lang.String,\ java.lang.String)
comment18.text=\r\n\ @brief\ Altera\ o\ estado\ de\ um\ im\u00F3vel,\ de\ acordo\ com\ as\ ac\u00E7\u00F5es\ feitas\ sobre\ ele.\r\n\ \r\n\ Primeiro\ verifica-se\ se\ o\ utilizador\ com\ sess\u00E3o\ iniciado\ \u00E9\ um\ vendedor\ -\ se\ n\u00E3o\ o\ for\r\n\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ SemAutorizacao.\ De\ seguida,\ verifica-se\ se\ o\ vendedor\ cont\u00E9m\ na\ sua\r\n\ lista\ de\ im\u00F3veis\ em\ venda\ o\ im\u00F3vel\ cujo\ c\u00F3digo\ de\ identifica\u00E7\u00E3o\ \u00E9\ passado\ como\ par\u00E2metro\r\n\ -\ caso\ n\u00E3o\ contenha,\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ ImovelInexistente.\ Al\u00E9m\ disso,\ \u00E9\ validado\ o\ estado\r\n\ recebido\ como\ par\u00E2metro\ -\ caso\ n\u00E3o\ seja\ v\u00E1lido\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ EstadoInvalido.\ Ap\u00F3s\ o\r\n\ tratamento\ das\ exce\u00E7\u00F5es,\ procura-se\ o\ im\u00F3vel\ cujo\ c\u00F3digo\ de\ identifica\u00E7\u00E3o\ \u00E9\ passado\ ao\ m\u00E9todo\r\n\ e\ altera-se\ o\ seu\ estado\ para\ o\ pretendido.\ Por\ fim,\ caso\ se\ tenha\ alterado\ o\ estado\ do\ im\u00F3vel\r\n\ para\ "vendido",\ \u00E9\ adicionado\ o\ im\u00F3vel\ \u00E0\ lista\ de\ im\u00F3veis\ vendidos\ do\ vendedor.\r\n\ \r\n\ @param\ idImovel\ Im\u00F3vel\ do\ qual\ se\ pretende\ alterar\ o\ estado.\r\n\ @param\ estado\ \ \ Estado\ para\ o\ qual\ se\ pretende\ alterar.\r\n
comment19.params=idImovel
comment19.target=void\ setFavorito(java.lang.String)
comment19.text=\r\n\ @brief\ Permite\ a\ um\ comprador\ marcar\ um\ im\u00F3vel\ como\ favorito.\r\n\ \r\n\ Primeiro\ verifica-se\ se\ o\ utilizador\ com\ sess\u00E3o\ iniciada\ \u00E9\ um\ comprador\ -\ caso\ n\u00E3o\ o\ seja\r\n\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ SemAutorizacao.\ De\ seguida,\ verifica-se\ se\ o\ c\u00F3digo\ de\ identifica\u00E7\u00E3o\r\n\ recebido\ como\ par\u00E2metro\ corresponde\ a\ algum\ dos\ im\u00F3veis\ no\ campo\ "imoveis"\ da\ Imoobiliaria\r\n\ -\ caso\ n\u00E3o\ exista,\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ ImovelInexistente.\ Em\ caso\ afirmativo,\ faz-se\ uma\r\n\ c\u00F3pia\ desse\ im\u00F3vel\ e\ adiciona-se\ esse\ im\u00F3vel\ \u00E0\ lista\ de\ favoritos\ do\ comprador.\r\n\ \r\n\ @param\ idImovel\ C\u00F3digo\ de\ identifica\u00E7\u00E3o\ do\ im\u00F3vel\ que\ se\ pretende\ adicionar\ aos\ favoritos\r\n
comment2.params=i
comment2.target=Imoobiliaria(Imoobiliaria)
comment2.text=\r\n\ Construtor\ por\ c\u00F3pia.\r\n\ \r\n\ @param\ i\ Imoobiliaria\ i.\r\n
comment20.params=utilizador
comment20.target=void\ registarUtilizador(Utilizador)
comment20.text=\r\n\ Primeiro\ verifica-se\ se\ a\ lista\ de\ utilizadores\ j\u00E1\ cont\u00E9m\ o\ utilizador\ que\ se\ pretende\r\n\ registar\ -\ caso\ j\u00E1\ contenha,\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ UtilizadorExistente.\ Caso\ contr\u00E1rio\ \u00E9\r\n\ adicionado\ o\ utilizador\ passado\ como\ par\u00E2metro\ \u00E0\ lista\ de\ utilizadores\ da\ Imoobiliaria.\r\n\ \ \r\n\ @param\ utilizador\ Utilizador\ que\ se\ pretende\ registar\r\n
comment21.params=email\ password
comment21.target=void\ iniciaSessao(java.lang.String,\ java.lang.String)
comment21.text=\r\n\ Primeiro\ verifica-se\ se\ o\ utilizador\ est\u00E1\ registado\ (i.e.\ se\ o\ seu\ email\ consta\ na\ lista\ de\ utilizadores\ \r\n\ da\ Imoobiliaria)\ e\ se\ a\ password\ recebida\ como\ par\u00E2metro\ correponde\ \u00E0\ que\ consta\ na\ lista\ dos\ utilizadores.\r\n\ Caso\ algum\ destes\ casos\ n\u00E3o\ se\ verifique,\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ SemAutorizacao.\ Se\ o\ utilizador\ estiver\ \r\n\ registado,\ \u00E9\ adicionado\ ao\ campo\ "utilizador"\ da\ Imoobiliaria.\r\n\ \r\n\ @param\ email\ \ \ \ Email\ do\ utilizador\ que\ pretende\ iniciar\ sess\u00E3o.\r\n\ @param\ password\ Password\ do\ utilizador\ que\ pretende\ iniciar\ sess\u00E3o.\r\n
comment22.params=
comment22.target=void\ fechaSessao()
comment22.text=\r\n\ Fecha\ a\ sess\u00E3o\ do\ utilizador\ atual,\ colocando\ o\ campo\ "utilizador"\ da\ Imoobiliaria\ a\ null.\r\n
comment23.params=im
comment23.target=void\ registaImovel(Imovel)
comment23.text=\r\n\ @brief\ Permite\ a\ um\ vendedor\ colocar\ um\ im\u00F3vel\ \u00E0\ venda.\r\n\ \r\n\ Primeiro\ verifica-se\ se\ o\ im\u00F3vel\ j\u00E1\ existe\ na\ lista\ de\ im\u00F3veis\ da\ Imoobiliaria\ -\ caso\ j\u00E1\ exista\r\n\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ ImovelExiste.\ De\ seguida,\ verifica-se\ se\ o\ utilizador\ com\ sess\u00E3o\ iniciada\r\n\ \u00E9\ um\ vendedor\ -\ caso\ n\u00E3o\ o\ seja,\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ SemAutorizacao.\ Depois\ percorre-se\ todos\ os\r\n\ utilizadores\ \u00E0\ procura\ do\ vendedor\ com\ sess\u00E3o\ iniciada\ e\ adiciona-se\ este\ novo\ im\u00F3vel\ \u00E0\ sua\ lista\r\n\ de\ im\u00F3veis\ em\ venda.\ Por\ fim,\ s\u00E3o\ atualizados\ os\ dados\ do\ vendedor\ na\ lista\ de\ utilizadores\ da\r\n\ Imoobiliaria,\ de\ forma\ a\ que\ contenha\ esta\ altera\u00E7\u00E3o\ no\ seu\ portf\u00F3lio.\r\n\ \r\n\ @param\ im\ Im\u00F3vel\ que\ se\ pretende\ registar.\r\n
comment24.params=im\ horas
comment24.target=void\ iniciaLeilao(Imovel,\ int)
comment24.text=\r\n\ @brief\ Permite\ a\ um\ vendedor\ colocar\ um\ im\u00F3vel\ em\ leil\u00E3o.\r\n\ \r\n\ Primeiro\ verifica-se\ se\ o\ utilizador\ com\ sess\u00E3o\ iniciada\ \u00E9\ um\ vendedor\ -\ caso\ n\u00E3o\ seja\ \u00E9\ lan\u00E7ada\ a\r\n\ exce\u00E7\u00E3o\ SemAutorizacao.\ Inicia-se\ o\ leil\u00E3o\ e\ percorre-se\ a\ lista\ de\ utilizadores\ de\ forma\ a\ encontrar\r\n\ todos\ os\ compradores\ que\ participem\ no\ leil\u00E3o\ (i.e.\ os\ que\ cont\u00EAm\ o\ campo\ "participaLeilao"\ a\ true)\ e\ a\ \r\n\ adicion\u00E1-los\ \u00E0\ lista\ de\ compradores\ do\ leil\u00E3o.\r\n\ \r\n\ @param\ im\ \ \ \ Im\u00F3vel\ que\ se\ pretende\ leiloar.\r\n\ @param\ horas\ Dura\u00E7\u00E3o,\ em\ horas,\ do\ leil\u00E3o.\r\n
comment25.params=idComprador\ limite\ incrementos\ minutos
comment25.target=void\ adicionaComprador(java.lang.String,\ double,\ double,\ double)
comment25.text=\r\n\ @brief\ Permite\ a\ um\ vendedor\ adicionar\ um\ comprador\ a\ um\ leil\u00E3o.\r\n\ \r\n\ Primeiro\ verifica-se\ se\ o\ utilizador\ com\ sess\u00E3o\ iniciada\ \u00E9\ um\ vendedor\ -\ caso\ n\u00E3o\ seja\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\r\n\ SemAutorizacao.\ Caso\ o\ leil\u00E3o\ n\u00E3o\ exista\ ou\ j\u00E1\ tenha\ terminado\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\ LeilaoTerminado.\ Depois,\r\n\ caso\ o\ comprador\ exista\ na\ lista\ dos\ utilizadores\ da\ Imoobiliaria,\ \u00E9\ adicionado\ o\ comprador\ ao\ leil\u00E3o.\r\n\ \r\n\ @param\ idComprador\ C\u00F3digo\ de\ identica\u00E7\u00E3o\ do\ comprador\ que\ se\ pretende\ adicionar\ ao\ leil\u00E3o.\r\n\ @param\ limite\ \ \ \ \ \ Quantia\ m\u00E1xima\ que\ o\ comprador\ pretende\ gastar\ por\ um\ im\u00F3vel\ num\ leil\u00E3o.\r\n\ @param\ incrementos\ Valor\ de\ incremento\ entre\ as\ licita\u00E7\u00F5es\ num\ leil\u00E3o.\r\n\ @param\ minutos\ \ \ \ \ Tempo\ entre\ as\ licita\u00E7\u00F5es\ do\ comprador.\r\n
comment26.params=
comment26.target=Comprador\ encerraLeilao()
comment26.text=\r\n\ @brief\ Permite\ a\ um\ vendedor\ encerrar\ um\ leil\u00E3o.\r\n\ \r\n\ Primeiro\ verifica-se\ se\ o\ utilizador\ com\ sess\u00E3o\ iniciada\ \u00E9\ um\ vendedor\ -\ caso\ n\u00E3o\ seja\ \u00E9\ lan\u00E7ada\ a\r\n\ exce\u00E7\u00E3o\ SemAutorizacao.\ Caso\ o\ leil\u00E3o\ n\u00E3o\ exista\ (i.e.\ seja\ igual\ a\ "null")\ \u00E9\ lan\u00E7ada\ a\ exce\u00E7\u00E3o\r\n\ LeilaoTerminado.\ De\ seguida,\ cria-se\ um\ c\u00F3pia\ do\ comprador\ que\ venceu\ o\ leil\u00E3o\ e\ muda-se\ o\ estado\r\n\ do\ im\u00F3vel\ leiloado\ para\ reservado.\ Por\ fim,\ retorna-se\ a\ c\u00F3pia\ do\ comprador\ vencedor.\r\n\ \r\n\ @return\ c\ Comprador\ que\ venceu\ o\ leil\u00E3o.\r\n
comment27.params=email
comment27.target=boolean\ containsUser(java.lang.String)
comment27.text=\r\n\ @param\ email\ Email\ a\ procurar.\r\n\ @return\ Devolve\ true\ se\ existir\ um\ utilizador\ com\ o\ email\ recebido\ no\ Map\ de\ utilizadores\ ou\ false\r\n\ \ \ \ \ \ \ \ \ caso\ contr\u00E1rio.\r\n
comment28.params=
comment28.target=int\ hashCode()
comment28.text=\r\n\ @return\ Devolve\ um\ c\u00F3digo\ de\ hash\ relativo\ a\ um\ utilizador.\r\n
comment29.params=o
comment29.target=boolean\ equals(java.lang.Object)
comment29.text=\r\n\ Verifica\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ inst\u00E2ncia\ da\ classe\ Imoobiliaria.\r\n\ \r\n\ @param\ o\ Objeto\ ao\ qual\ se\ quer\ efetuar\ a\ compara\u00E7\u00E3o.\r\n\ @return\ Devolve\ true\ caso\ o\ objeto\ seja\ igual\ ou\ false,\ caso\ contr\u00E1rio.\r\n
comment3.params=
comment3.target=java.util.Map\ getUtilizadores()
comment3.text=\r\n\ @return\ Devolve\ o\ campo\ "utilizadores".\r\n
comment30.params=
comment30.target=java.lang.String\ toString()
comment30.text=\r\n\ @return\ Devolve\ uma\ representa\u00E7\u00E3o\ textual\ da\ classe\ Imoobiliaria.\r\n
comment31.params=
comment31.target=Imoobiliaria\ clone()
comment31.text=\r\n\ @return\ Devolve\ uma\ c\u00F3pia\ de\ uma\ Imoobiliaria.\r\n
comment32.params=file
comment32.target=void\ gravaObj(java.lang.String)
comment32.text=\r\n\ Grava\ os\ campos\ da\ inst\u00E2ncia\ Imoobiliaria\ num\ ficheiro\ objeto.\r\n
comment4.params=
comment4.target=java.util.List\ getImoveis()
comment4.text=\r\n\ @return\ Devolve\ o\ campo\ "imoveis".\r\n
comment5.params=
comment5.target=Utilizador\ getUtilizador()
comment5.text=\r\n\ @return\ Devolve\ o\ campo\ "utilizador"\ ou\ null\ caso\ o\ utilizador\ seja\ nulo.\r\n
comment6.params=
comment6.target=Leilao\ getLeilao()
comment6.text=\r\n\ @return\ Devolve\ o\ campo\ "leilao"\ ou\ null\ caso\ o\ leil\u00E3o\ seja\ nulo.\r\n
comment7.params=
comment7.target=java.util.List\ getConsultas()
comment7.text=\r\n\ @brief\ Devolve\ uma\ lista\ com\ as\ datas\ (e\ emails,\ caso\ exista\ essa\ informa\u00E7\u00E3o)\ das\r\n\ \ \ \ \ \ \ \ 10\ \u00FAltimas\ consultas\ aos\ im\u00F3veis\ que\ um\ vendedor\ tem\ para\ venda.\r\n\ \r\n\ Cria-se\ um\ comparador\ de\ forma\ a\ ordenar\ as\ datas\ por\ ordem\ cronol\u00F3gica.\ De\ seguida,\r\n\ para\ cada\ im\u00F3vel\ verifica-se\ se\ o\ vendedor\ com\ sess\u00E3o\ iniciada\ (caso\ n\u00E3o\ seja\ um\ vendedor,\ \r\n\ lan\u00E7a-se\ a\ exce\u00E7\u00E3o\ SemAutorizacao)\ tem\ esse\ im\u00F3vel\ na\ sua\ lista\ de\ im\u00F3veis\ em\ venda\ e,\r\n\ em\ caso\ afirmativo,\ adicionam-se\ as\ consultas\ feitas\ a\ esse\ im\u00F3vel\ ao\ TreeSet\ das\ consultas,\r\n\ que\ fica\ ordenado\ pelo\ comparador.\ Finalmente,\ adicionam-se\ as\ \u00FAltimas\ 10\ consultas\ de\ cada\r\n\ im\u00F3vel\ ao\ ArrayList\ que\ depois\ \u00E9\ devolvido.\ \r\n\ \r\n\ @return\ ret\ ArrayList\ que\ cont\u00E9m\ as\ 10\ \u00FAltimas\ consultas\ dos\ im\u00F3veis\ da\ lista\ de\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ im\u00F3veis\ em\ venda\ do\ vendedor.\r\n
comment8.params=n
comment8.target=java.util.Set\ getTopImoveis(int)
comment8.text=\r\n\ @brief\ Devolve\ um\ conjunto\ com\ os\ c\u00F3digos\ dos\ im\u00F3veis\ mais\ consultados\ de\ um\ vendedor\r\n\ \ \ \ \ \ \ \ (ou\ seja,\ com\ mais\ de\ N\ consultas).\r\n\ \ \ \ \ \ \ \ \r\n\ Atrav\u00E9s\ de\ um\ stream()\ e\ de\ um\ filter(),\ filtram-se\ os\ im\u00F3veis\ com\ um\ n\u00FAmero\r\n\ de\ consultas\ superior\ ao\ par\u00E2metro\ n\ e,\ de\ seguida,\ com\ o\ aux\u00EDlio\ de\ um\ map()\r\n\ adicionam-se\ ao\ TreeSet\ retornado\ os\ seus\ c\u00F3digos\ de\ identifica\u00E7\u00E3o.\r\n\ \r\n\ @param\ n\ Limite\ m\u00EDnimo\ de\ consultas.\r\n\ @return\ set.\ \r\n
comment9.params=classe\ preco
comment9.target=java.util.List\ getImovel(java.lang.String,\ int)
comment9.text=\r\n\ @brief\ Consulta\ a\ lista\ de\ todos\ os\ im\u00F3veis\ de\ um\ dado\ tipo\ (Terreno,\ Moradia,\ etc.)\r\n\ \ \ \ \ \ \ \ e\ at\u00E9\ um\ certo\ pre\u00E7o.\r\n\ \ \ \ \ \ \ \ \r\n\ Para\ todos\ os\ im\u00F3veis,\ verifica-se\ se\ correspondem\ a\ uma\ dada\ classe\ recebida\ como\r\n\ par\u00E2metro\ e\ se\ o\ preco\ \u00E9\ inferior\ ao\ pre\u00E7o\ recebido\ como\ par\u00E2metro.\ Em\ caso\ afirmativo,\r\n\ adiciona-se\ uma\ nova\ consulta\ com\ a\ data\ atual\ e\ o\ email\ do\ utilizador\ com\ sess\u00E3o\r\n\ iniciada.\ Por\ fim,\ retorna-se\ a\ um\ ArrayList\ com\ o\ resultado\ da\ pesquisa.\r\n\ \r\n\ @param\ classe\ Classe\ de\ im\u00F3veis\ a\ pesquisar.\r\n\ @param\ preco\ \ Pre\u00E7o\ m\u00E1ximo\ dos\ im\u00F3veis\ a\ pesquisar.\r\n\ @return\ ret\ ArrayList\ com\ o\ resultado\ da\ pesquisa\ dos\ im\u00F3veis.\r\n
numComments=33
